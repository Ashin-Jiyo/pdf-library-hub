import{C as h,u as y,p as v}from"./index-Blmxc2aS.js";const g=(e,t,a)=>{const o=e+t;return h.HmacSHA1(o,a).toString()},K=()=>{const e=Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),t=Math.floor(Date.now()/1e3)+2400,o=g(e,t,"private_CpvSBEbYcTfXzTxWG+o/BdMo55c=");return{token:e,expire:t.toString(),signature:o,publicKey:"public_1vF7O9S6tznVBCjXvWb1Z0Zsl0k="}},M=()=>{const e=Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),t=Math.floor(Date.now()/1e3)+2400,o=g(e,t,"private_6PB+nEbVIOsG2COo3lxWKqqgt7o=");return{token:e,expire:t.toString(),signature:o,publicKey:"public_4IVe6C/J5H9PaU0Kku7c4l6LHnk="}},f={async uploadToMainAccount(e){try{const t=Date.now(),a=K(),o=new FormData;o.append("file",e),o.append("fileName",`large_${t}_${e.name}`),o.append("folder","/pdf-library/large-pdfs"),o.append("publicKey",a.publicKey),o.append("signature",a.signature),o.append("expire",a.expire),o.append("token",a.token);const n=await fetch("https://upload.imagekit.io/api/v1/files/upload",{method:"POST",body:o});if(!n.ok){const c=await n.text();throw console.error("ImageKit main account response error:",c),new Error(`ImageKit main upload failed: ${n.status} ${n.statusText}`)}const l=await n.json();if(l.error)throw console.error("ImageKit main account upload error:",l.error),new Error(l.error.message||"ImageKit main upload failed");return console.log("PDF uploaded successfully to ImageKit main account:",l.url),{...l,provider:"imagekit-large"}}catch(t){throw console.error("Error uploading to ImageKit main account:",t),t}},async uploadToSmallAccount(e){try{const t=Date.now(),a=M(),o=new FormData;o.append("file",e),o.append("fileName",`small_${t}_${e.name}`),o.append("folder","/pdf-library/small-pdfs"),o.append("publicKey",a.publicKey),o.append("signature",a.signature),o.append("expire",a.expire),o.append("token",a.token);const n=await fetch("https://upload.imagekit.io/api/v1/files/upload",{method:"POST",body:o});if(!n.ok){const c=await n.text();throw console.error("ImageKit small account response error:",c),new Error(`ImageKit small upload failed: ${n.status} ${n.statusText}`)}const l=await n.json();if(l.error)throw console.error("ImageKit small account upload error:",l.error),new Error(l.error.message||"ImageKit small upload failed");return console.log("PDF uploaded successfully to ImageKit small account:",l.url),{...l,provider:"imagekit-small"}}catch(t){throw console.error("Error uploading to ImageKit small account:",t),t}}},T=f.uploadToSmallAccount,k=f.uploadToMainAccount,w=10*1024*1024,I=25*1024*1024,d=50*1024*1024,b=async(e,t,a,o,n=[],l="Admin",c="system")=>{try{console.log(`üìä File Analysis: ${e.name} (${(e.size/(1024*1024)).toFixed(2)}MB)`);const s=!"pdf-library-hub".includes("your_");if(e.size>d&&!s)throw new Error(`File size (${(e.size/(1024*1024)).toFixed(2)}MB) exceeds current limit of 25MB. To upload files up to 50MB, please configure Appwrite storage. See APPWRITE_SETUP.md for instructions.`);if(e.size>d)throw new Error(`File size (${(e.size/(1024*1024)).toFixed(2)}MB) exceeds maximum limit of 50MB`);let r;const S=`pdf_${Date.now()}_${e.name}`;if(e.size<w){console.log("üîπ Routing to ImageKit Small Account (< 10MB)");const i=await T(e);r={fileId:i.fileId,fileName:i.name,fileSize:i.size,mimeType:i.filePath.split(".").pop()||"pdf",url:i.url,provider:"imagekit-small",downloadUrl:i.url}}else if(e.size<I||!s){console.log(`üî∏ Routing to ImageKit Main Account (10-${s?25:50}MB)`);const p=await k(e);r={fileId:p.fileId,fileName:p.name,fileSize:p.size,mimeType:p.filePath.split(".").pop()||"pdf",url:p.url,provider:"imagekit-large",downloadUrl:p.url}}else{console.log("üî∂ Routing to Appwrite (25-50MB)");const i=await y(e,S);r={fileId:i.fileId,fileName:i.fileName,fileSize:i.fileSize,mimeType:i.mimeType,url:i.url,provider:"appwrite",downloadUrl:i.url,bucketId:i.bucketId}}console.log(`‚úÖ Upload successful via ${r.provider}:`,r.fileName);const u={title:t,author:l,description:a,categories:[o],tags:n,fileName:r.fileName,fileSize:r.fileSize,mimeType:r.mimeType,pdfUrl:r.url,fileUrl:r.url,uploadProvider:r.provider,viewCount:0,downloadCount:0,uploadedBy:c};r.provider.startsWith("imagekit")&&(u.imagekitFileId=r.fileId),r.provider==="appwrite"&&(u.appwriteFileId=r.fileId,r.bucketId&&(u.appwriteBucketId=r.bucketId));const m=await v.createPDF(u);return console.log("üíæ PDF metadata saved to Firestore with ID:",m),m}catch(s){throw console.error("‚ùå Upload failed:",s),s}},x=e=>e<w?{provider:"imagekit-small",description:"ImageKit Small Account (< 10MB)",icon:"üîπ"}:e<I?{provider:"imagekit-large",description:"ImageKit Main Account (10-25MB)",icon:"üî∏"}:e<d?{provider:"appwrite",description:"Appwrite Storage (25-50MB)",icon:"üî∂"}:{provider:null,description:"File too large (> 50MB)",icon:"‚ùå"},F={uploadPDFFile:b,getProviderInfo:x};export{F as default,x as getProviderInfo,F as tripleUploadService,b as uploadPDFFile};
